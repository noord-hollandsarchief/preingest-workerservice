{
  "openapi": "3.0.1",
  "info": {
    "title": "Noord.Hollands.Archief.Preingest.WebApi",
    "version": "1.0"
  },
  "paths": {
    "/api/Opex/buildopex/{guid}": {
      "put": {
        "tags": [
          "Opex"
        ],
        "operationId": "Build Opex for ingest.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inheritance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Inheritance"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Inheritance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/showbucket/{guid}": {
      "get": {
        "tags": [
          "Opex"
        ],
        "operationId": "Show the list of the bucket content.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/clearbucket/{guid}": {
      "delete": {
        "tags": [
          "Opex"
        ],
        "operationId": "Clear the bucket.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/upload2bucket/{guid}": {
      "post": {
        "tags": [
          "Opex"
        ],
        "operationId": "Upload an Opex collection to the bucket",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/checksum/{guid}": {
      "post": {
        "tags": [
          "Opex"
        ],
        "operationId": "Run checksum on all files.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Algorithm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Algorithm"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Algorithm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/polish/{guid}": {
      "post": {
        "tags": [
          "Opex"
        ],
        "operationId": "Polish Opex files by using XSLT transformation.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Opex/buildnonmetadataopex/{guid}": {
      "put": {
        "tags": [
          "Opex"
        ],
        "operationId": "Build Opex (non metadata) for ingest.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/collections": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get collections of tar/tar.gz files.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/collection/{guid}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get specific collection of tar/tar.gz file.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/json/{guid}/{json}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get json results from a session.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "json",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/report/{guid}/{file}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get a report as a file from a session.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/stylesheets": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get a list of files from prewash folder.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/schemas": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get a list of schemas.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/view_structure/{guid}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get collection structure of a session ID.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/item_content/{base64EncodedValue}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get collection item of a session ID.",
        "parameters": [
          {
            "name": "base64EncodedValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Output/item_properties/{base64EncodedValue}": {
      "get": {
        "tags": [
          "Output"
        ],
        "operationId": "Get sidecar structure from a session.",
        "parameters": [
          {
            "name": "base64EncodedValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/check": {
      "get": {
        "tags": [
          "Preingest"
        ],
        "operationId": "API service check",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/calculate/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Collection checksum calculation. Options : MD5, SHA1, SHA224, SHA256, SHA384, SHA512",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyChecksum"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyChecksum"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyChecksum"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/unpack/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Unpack tar collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/virusscan/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Virusscan check",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/naming/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Naming check",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/sidecar/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Sidecar check",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/profiling/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Droid create profile",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/exporting/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Droid exporting result (CSV)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/reporting/{type}/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Droid reporting PDF/Droid (XML)/Planets (XML)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/signature/update": {
      "put": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Droid signature update",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/greenlist/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Greenlist check",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/encoding/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Encoding check .metadata files",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/validate/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Validate .metadata files",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/excelcreator/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Generate Excel report",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/settings/{guid}": {
      "put": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Save preingest extra setting(s)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodySettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodySettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/prewash/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Prewash .metadata files.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/indexing/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Index metadata files and save the result in an Excel report",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/detection/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Detect files with password protection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/pronom/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Update metadata (bestand) files with PRONOM values",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Preingest/binaries/{guid}": {
      "post": {
        "tags": [
          "Preingest"
        ],
        "operationId": "Validate non-metadata files looking for ZBF and mismatch (PRONOM)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/startplan/{guid}": {
      "post": {
        "tags": [
          "Service"
        ],
        "operationId": "Auto run preingest by worker service",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyExecutionPlan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyExecutionPlan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyExecutionPlan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/cancelplan/{guid}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "Delete an autorun preingest in worker service by GUID",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/action/{actionGuid}": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "Retrieve an action from a preingest session",
        "parameters": [
          {
            "name": "actionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/actions/{folderSessionGuid}": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "Retrieve all actions from a preingest session",
        "parameters": [
          {
            "name": "folderSessionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/new/{folderSessionGuid}": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "Add an action",
        "parameters": [
          {
            "name": "folderSessionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyNewAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyNewAction"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyNewAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/update/{actionGuid}": {
      "put": {
        "tags": [
          "Status"
        ],
        "operationId": "Update an action status and summary",
        "parameters": [
          {
            "name": "actionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyUpdate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/start/{actionGuid}": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "Add a start status",
        "parameters": [
          {
            "name": "actionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/completed/{actionGuid}": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "Add a completed status",
        "parameters": [
          {
            "name": "actionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/failed/{actionGuid}": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "Add a failed status",
        "parameters": [
          {
            "name": "actionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/reset/{folderSessionGuid}": {
      "delete": {
        "tags": [
          "Status"
        ],
        "operationId": "Clear data for a session folder",
        "parameters": [
          {
            "name": "folderSessionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/remove/{folderSessionGuid}": {
      "delete": {
        "tags": [
          "Status"
        ],
        "operationId": "Remove session folder and clear the data for session folder",
        "parameters": [
          {
            "name": "folderSessionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Status/notify": {
      "post": {
        "tags": [
          "Status"
        ],
        "operationId": "Notify the client about an event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyEventMessageBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyEventMessageBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BodyEventMessageBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ToPX2MDTO/start_conversion/{guid}": {
      "post": {
        "tags": [
          "ToPX2MDTO"
        ],
        "operationId": "Converting ToPX to MDTO",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ToPX2MDTO/update_fileformat/{guid}": {
      "post": {
        "tags": [
          "ToPX2MDTO"
        ],
        "operationId": "Update file format with PRONOM properties in MDTO (bestandType)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ToPX2MDTO/update_fixity/{guid}": {
      "post": {
        "tags": [
          "ToPX2MDTO"
        ],
        "operationId": "Update file fixity in MDTO (bestandType)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ToPX2MDTO/update_relationship/{guid}": {
      "post": {
        "tags": [
          "ToPX2MDTO"
        ],
        "operationId": "Update relationship references in MDTO (informatieobjectType and bestandType)",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Algorithm": {
        "type": "object",
        "properties": {
          "checksumType": {
            "$ref": "#/components/schemas/AlgorithmTypes"
          },
          "processingMode": {
            "$ref": "#/components/schemas/ExecutionMode"
          }
        },
        "additionalProperties": false
      },
      "AlgorithmTypes": {
        "enum": [
          "SHA1",
          "MD5",
          "SHA256",
          "SHA512",
          "SHA224",
          "SHA384"
        ],
        "type": "string"
      },
      "BodyChecksum": {
        "type": "object",
        "properties": {
          "checksumType": {
            "type": "string",
            "nullable": true
          },
          "inputChecksumValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyEventMessageBody": {
        "type": "object",
        "properties": {
          "eventDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "hasSummary": {
            "type": "boolean"
          },
          "processed": {
            "type": "integer",
            "format": "int32"
          },
          "accepted": {
            "type": "integer",
            "format": "int32"
          },
          "rejected": {
            "type": "integer",
            "format": "int32"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyExecutionPlan": {
        "type": "object",
        "properties": {
          "workflow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BodyPlan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyNewAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyPlan": {
        "type": "object",
        "properties": {
          "actionName": {
            "$ref": "#/components/schemas/ValidationActionType"
          },
          "continueOnFailed": {
            "type": "boolean"
          },
          "continueOnError": {
            "type": "boolean"
          },
          "startOnError": {
            "type": "boolean",
            "default": true
          }
        },
        "additionalProperties": false
      },
      "BodySettings": {
        "type": "object",
        "properties": {
          "checksumType": {
            "type": "string",
            "nullable": true
          },
          "checksumValue": {
            "type": "string",
            "nullable": true
          },
          "prewash": {
            "type": "string",
            "nullable": true
          },
          "polish": {
            "type": "string",
            "nullable": true
          },
          "mergeRecordAndFile": {
            "type": "string",
            "nullable": true
          },
          "schemaToValidate": {
            "type": "string",
            "nullable": true
          },
          "rootNamesExtraXml": {
            "type": "string",
            "nullable": true
          },
          "ignoreValidation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BodyUpdate": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecutionMode": {
        "enum": [
          "CalculateAndCompare",
          "OnlyCalculate"
        ],
        "type": "string"
      },
      "Inheritance": {
        "type": "object",
        "properties": {
          "methodResult": {
            "$ref": "#/components/schemas/InheritanceMethod"
          }
        },
        "additionalProperties": false
      },
      "InheritanceMethod": {
        "enum": [
          "None",
          "Combine"
        ],
        "type": "string"
      },
      "ValidationActionType": {
        "enum": [
          "SettingsHandler",
          "ContainerChecksumHandler",
          "ExportingHandler",
          "ReportingPdfHandler",
          "ReportingDroidXmlHandler",
          "ReportingPlanetsXmlHandler",
          "ProfilesHandler",
          "EncodingHandler",
          "UnpackTarHandler",
          "MetadataValidationHandler",
          "NamingValidationHandler",
          "GreenListHandler",
          "ExcelCreatorHandler",
          "ScanVirusValidationHandler",
          "SidecarValidationHandler",
          "PrewashHandler",
          "ShowBucketHandler",
          "ClearBucketHandler",
          "BuildOpexHandler",
          "PolishHandler",
          "UploadBucketHandler",
          "FilesChecksumHandler",
          "IndexMetadataHandler",
          "PasswordDetectionHandler",
          "ToPX2MDTOHandler",
          "PronomPropsHandler",
          "RelationshipHandler",
          "FixityPropsHandler",
          "BinaryFileObjectValidationHandler",
          "BinaryFileMetadataMutationHandler"
        ],
        "type": "string"
      }
    }
  }
}